CREATE DATABASE foodify_auth;
       
\c "foodify_auth"

create table public."__EFMigrationsHistory"
(
    "MigrationId"    varchar(150) not null
        constraint "PK___EFMigrationsHistory"
            primary key,
    "ProductVersion" varchar(32)  not null
);

alter table public."__EFMigrationsHistory"
    owner to postgres;

create table public."AspNetRoles"
(
    "Id"               uuid not null
        constraint "PK_AspNetRoles"
            primary key,
    "Name"             varchar(256),
    "NormalizedName"   varchar(256),
    "ConcurrencyStamp" text
);

alter table public."AspNetRoles"
    owner to postgres;

create unique index "RoleNameIndex"
    on public."AspNetRoles" ("NormalizedName");

create table public."AspNetUsers"
(
    "Id"                               uuid    not null
        constraint "PK_AspNetUsers"
            primary key,
    "ResetPasswordTokenExpirationDate" timestamp with time zone,
    "VerifyEmailTokenExpirationDate"   timestamp with time zone,
    "UserName"                         varchar(256),
    "NormalizedUserName"               varchar(256),
    "Email"                            varchar(256),
    "NormalizedEmail"                  varchar(256),
    "EmailConfirmed"                   boolean not null,
    "PasswordHash"                     text,
    "SecurityStamp"                    text,
    "ConcurrencyStamp"                 text,
    "PhoneNumber"                      text,
    "PhoneNumberConfirmed"             boolean not null,
    "TwoFactorEnabled"                 boolean not null,
    "LockoutEnd"                       timestamp with time zone,
    "LockoutEnabled"                   boolean not null,
    "AccessFailedCount"                integer not null
);

alter table public."AspNetUsers"
    owner to postgres;

create index "EmailIndex"
    on public."AspNetUsers" ("NormalizedEmail");

create unique index "UserNameIndex"
    on public."AspNetUsers" ("NormalizedUserName");

create table public."AspNetRoleClaims"
(
    "Id"         integer generated by default as identity
        constraint "PK_AspNetRoleClaims"
            primary key,
    "RoleId"     uuid not null
        constraint "FK_AspNetRoleClaims_AspNetRoles_RoleId"
            references public."AspNetRoles"
            on delete cascade,
    "ClaimType"  text,
    "ClaimValue" text
);

alter table public."AspNetRoleClaims"
    owner to postgres;

create index "IX_AspNetRoleClaims_RoleId"
    on public."AspNetRoleClaims" ("RoleId");

create table public."AspNetUserClaims"
(
    "Id"         integer generated by default as identity
        constraint "PK_AspNetUserClaims"
            primary key,
    "UserId"     uuid not null
        constraint "FK_AspNetUserClaims_AspNetUsers_UserId"
            references public."AspNetUsers"
            on delete cascade,
    "ClaimType"  text,
    "ClaimValue" text
);

alter table public."AspNetUserClaims"
    owner to postgres;

create index "IX_AspNetUserClaims_UserId"
    on public."AspNetUserClaims" ("UserId");

create table public."AspNetUserLogins"
(
    "LoginProvider"       text not null,
    "ProviderKey"         text not null,
    "ProviderDisplayName" text,
    "UserId"              uuid not null
        constraint "FK_AspNetUserLogins_AspNetUsers_UserId"
            references public."AspNetUsers"
            on delete cascade,
    constraint "PK_AspNetUserLogins"
        primary key ("LoginProvider", "ProviderKey")
);

alter table public."AspNetUserLogins"
    owner to postgres;

create index "IX_AspNetUserLogins_UserId"
    on public."AspNetUserLogins" ("UserId");

create table public."AspNetUserRoles"
(
    "UserId" uuid not null
        constraint "FK_AspNetUserRoles_AspNetUsers_UserId"
            references public."AspNetUsers"
            on delete cascade,
    "RoleId" uuid not null
        constraint "FK_AspNetUserRoles_AspNetRoles_RoleId"
            references public."AspNetRoles"
            on delete cascade,
    constraint "PK_AspNetUserRoles"
        primary key ("UserId", "RoleId")
);

alter table public."AspNetUserRoles"
    owner to postgres;

create index "IX_AspNetUserRoles_RoleId"
    on public."AspNetUserRoles" ("RoleId");

create table public."AspNetUserTokens"
(
    "UserId"        uuid not null
        constraint "FK_AspNetUserTokens_AspNetUsers_UserId"
            references public."AspNetUsers"
            on delete cascade,
    "LoginProvider" text not null,
    "Name"          text not null,
    "Value"         text,
    constraint "PK_AspNetUserTokens"
        primary key ("UserId", "LoginProvider", "Name")
);

alter table public."AspNetUserTokens"
    owner to postgres;

